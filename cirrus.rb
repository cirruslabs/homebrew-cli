# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Cirrus < Formula
  desc ""
  homepage ""
  version "0.130.1"
  license "AGPL-3.0-only"

  on_macos do
    on_intel do
      url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.130.1/cirrus-darwin-amd64.tar.gz"
      sha256 "6d204bad3bf60a6f50a2800608f3593edd9397fe263c65b3c578a2917f4f6cba"

      def install
        bin.install "cirrus"
        generate_completions_from_executable(bin/"cirrus", "completion")
      end
    end
    on_arm do
      url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.130.1/cirrus-darwin-arm64.tar.gz"
      sha256 "a274a05af8849d0edbf798cb54b73a51948cc99ae21dbf309884be25cf379b28"

      def install
        bin.install "cirrus"
        generate_completions_from_executable(bin/"cirrus", "completion")
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.130.1/cirrus-linux-amd64.tar.gz"
        sha256 "235f943decd91416f3a3153d1415da8ecc261de81cadcee455db14190186ea7d"

        def install
          bin.install "cirrus"
          generate_completions_from_executable(bin/"cirrus", "completion")
        end
      end
    end
    on_arm do
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.130.1/cirrus-linux-arm.tar.gz"
        sha256 "a7fe01b9c0c06c31f20d2f71508a8dd290598ce47a26ffc598369d5d7e3bd054"

        def install
          bin.install "cirrus"
          generate_completions_from_executable(bin/"cirrus", "completion")
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.130.1/cirrus-linux-arm64.tar.gz"
        sha256 "fede97702e1676cca02cf4cc1f78cae7e965bbddc98fef0d49588559658b223a"

        def install
          bin.install "cirrus"
          generate_completions_from_executable(bin/"cirrus", "completion")
        end
      end
    end
  end

  def caveats
    <<~EOS
      See the Github repository for more information
    EOS
  end
end
