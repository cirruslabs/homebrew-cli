# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Cirrus < Formula
  desc ""
  homepage ""
  version "0.120.2"
  license "AGPL-3.0-only"

  on_macos do
    on_intel do
      url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.120.2/cirrus-darwin-amd64.tar.gz"
      sha256 "a1ed33798becff0042a6a548c5907851eaf535c09c8aac68317e888098ac6cb0"

      def install
        bin.install "cirrus"
        generate_completions_from_executable(bin/"cirrus", "completion")
      end
    end
    on_arm do
      url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.120.2/cirrus-darwin-arm64.tar.gz"
      sha256 "a0f6d7c7556284b7badc5769f011cc14b294bced153d6080a971f02156fa3b83"

      def install
        bin.install "cirrus"
        generate_completions_from_executable(bin/"cirrus", "completion")
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.120.2/cirrus-linux-amd64.tar.gz"
        sha256 "2219ff96d27b0ce679275df412abf420503cfd1a3c635018681527924298bb15"

        def install
          bin.install "cirrus"
          generate_completions_from_executable(bin/"cirrus", "completion")
        end
      end
    end
    on_arm do
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.120.2/cirrus-linux-arm.tar.gz"
        sha256 "57c52347cd47ade7592741eb864114fac7bc09f5ce2b19b024177fa3194a9841"

        def install
          bin.install "cirrus"
          generate_completions_from_executable(bin/"cirrus", "completion")
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/cirruslabs/cirrus-cli/releases/download/v0.120.2/cirrus-linux-arm64.tar.gz"
        sha256 "4935a4b8bb27d6a631404a7dc89972d5de0c43f27d63ba9a558aa5ce87c71ae0"

        def install
          bin.install "cirrus"
          generate_completions_from_executable(bin/"cirrus", "completion")
        end
      end
    end
  end

  def caveats
    <<~EOS
      See the Github repository for more information
    EOS
  end
end
